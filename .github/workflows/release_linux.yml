name: Release Build ALL Linux

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write    
    strategy:
      matrix:
        target: 
          - x86_64-linux-gnu
          - aarch64-linux-gnu
          - aarch64-linux-android
          - riscv64-linux-gnu
    env:
      BUILD_DATE: ${{ github.workflow }}-${{ github.run_id }}-$(date -u +'%Y_%m_%d')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: recursive
          fetch-depth: 0  # 获取所有提交和Tag

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          local-cache: true
          add-to-path: true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            cmake \
            make \
            gcc-riscv64-linux-gnu \
            libc6-dev-riscv64-cross

      - name: Setup Zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.14.0

      - name: Set Last Commit Date
        id: last-commit-date
        run: |
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          FORMATTED_DATE=$(date -d "$LAST_COMMIT_DATE" +%Y_%m_%d)
          echo "LAST_COMMIT_DATE=$FORMATTED_DATE" >> $GITHUB_ENV

      - name: Build for ${{ matrix.target }}
        run: |
          export OUTPUT_DIR="release/$(
            if [[ "${{ matrix.target }}" == *"android"* ]]; then
              echo "android"
            else
              echo "linux"
            fi
          )/ReleaseSmall"

          chmod +x ./zig-build/*.sh
          ./zig-build/build_zlm.sh --target=${{ matrix.target }}

          if [ -d "$OUTPUT_DIR" ]; then
            RELEASE_NAME="ZLMediaKit_${{ matrix.target }}_${{ env.LAST_COMMIT_DATE }}"
            mkdir -p release/artifacts
            mv "$OUTPUT_DIR" "release/artifacts/$RELEASE_NAME"
            tar -czvf "release/artifacts/$RELEASE_NAME.tar.gz" -C "release/artifacts" "$RELEASE_NAME"
          else
            echo "::error::Output directory $OUTPUT_DIR not found!"
            exit 1
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ matrix.target }}
          path: release/artifacts/ZLMediaKit_${{ matrix.target }}_${{ env.LAST_COMMIT_DATE }}.tar.gz
          retention-days: 7

  release:
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: recursive
          fetch-depth: 0

      - name: Set Last Commit Date
        id: last-commit-date
        run: |
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          FORMATTED_DATE=$(date -d "$LAST_COMMIT_DATE" +%Y_%m_%d)
          echo "LAST_COMMIT_DATE=$FORMATTED_DATE" >> $GITHUB_ENV

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
          pattern: release-artifacts-*
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ env.LAST_COMMIT_DATE }}
          name: Release ${{ env.LAST_COMMIT_DATE }}
          body: |
            Automatic build for commit ${{ github.sha }}
            Built on: ${{ env.LAST_COMMIT_DATE }}
            Changes:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
          overwrite: true  # 覆盖现有Release和Tag
          files: |
            release-artifacts/*.tar.gz