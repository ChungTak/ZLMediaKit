name: Build ZLMediaKit Windows

on:
  workflow_dispatch:
jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest  # GitHub 目前提供的最新 Windows Server 版本（通常为 2022）

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup MSVC 2022
      uses: ilammy/msvc-dev-cmd@v1
      with:
        toolchain: vs2022

    - name: Install CMake
      run: choco install cmake -y

    - name: Install OpenSSL
      run: |
        $url = "https://slproweb.com/download/Win64OpenSSL-3_0_16.exe"
        $output = "$env:RUNNER_TEMP\OpenSSL.exe"
        Invoke-WebRequest -Uri $url -OutFile $output
        Start-Process -FilePath $output -ArgumentList '/silent', '/sp-', '/suppressmsgboxes', '/norestart' -Wait
        Add-Content $env:GITHUB_ENV "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64\"

    - name: Install libsrtp
      run: |
        $version = "2.4.2"
        $url = "https://github.com/cisco/libsrtp/archive/refs/tags/v$version.zip"
        $output = "$env:RUNNER_TEMP\libsrtp.zip"
        Invoke-WebRequest -Uri $url -OutFile $output
        Expand-Archive -Path $output -DestinationPath "$env:RUNNER_TEMP\libsrtp"
        cd "$env:RUNNER_TEMP\libsrtp\libsrtp-$version"
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=C:\libsrtp -G "Visual Studio 17 2022" -DBUILD_SHARED_LIBS=on -DENABLE_OPENSSL=on ..
        cmake --build . --config Release
        cmake --install . --prefix "C:\libsrtp"

    - name: Build ZLMediaKit
      run: .\zig-build\build_zlm_windows.bat
      env:
        PATH: ${{ env.PATH }};C:\Program Files\OpenSSL-Win64\bin
        OPENSSL_ROOT_DIR: C:\Program Files\OpenSSL-Win64

    - name: Get commit date
      id: get_date
      run: |
        $date = git log -1 --format=%cd --date=short
        echo "DATE=$date" >> $env:GITHUB_ENV
        echo "date=$date" >> $env:GITHUB_OUTPUT

    - name: Package artifacts
      run: |
        mkdir release_package
        Copy-Item -Path release\windows\Release\* -Destination release_package -Recurse
        Compress-Archive -Path release_package -DestinationPath ZLMediaKit_webrtc_Win64_$env:DATE.zip

    - name: Upload release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        files: ZLMediaKit_webrtc_Win64_${{ env.DATE }}.zip
        body: "Windows build for commit ${{ github.sha }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}