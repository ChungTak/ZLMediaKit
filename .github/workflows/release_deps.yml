name: Release DEPENDENCIES

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      matrix:
        target: 
          - x86_64-linux-gnu
          - aarch64-linux-gnu
          - aarch64-linux-android
          - arm-linux-android
          - riscv64-linux-gnu
          - x86_64-windows-gnu
        include:
          - target: x86_64-windows-gnu
            os: windows-latest  # 特殊处理Windows目标
    env:
      BUILD_DATE: ${{ github.workflow }}-${{ github.run_id }}-$(date -u +'%Y_%m_%d')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: recursive
          fetch-depth: 0

      - name: Set Last Commit Date
        run: |
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          FORMATTED_DATE=$(date -d "$LAST_COMMIT_DATE" +%Y_%m_%d)
          echo "LAST_COMMIT_DATE=$FORMATTED_DATE" >> $GITHUB_ENV

      - name: Setup Build Environment
        run: |
          # 根据目标平台动态安装依赖
          if [[ "${{ matrix.target }}" != *"windows"* ]]; then
            sudo apt-get update -qq
            sudo apt-get install -y \
              cmake \
              make \
              gcc-riscv64-linux-gnu \
              libc6-dev-riscv64-cross
          fi

      - name: Setup Android NDK
        if: contains(matrix.target, 'android')
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          local-cache: true
          add-to-path: true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Setup Zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.14.0

      - name: Build ${{ matrix.target }}
        run: |
          # Windows特殊处理
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            echo "Installing mingw for Windows target..."
            sudo apt-get update -y
            sudo apt-get install -y g++-mingw-w64
          fi

          chmod +x ./zig-build/*.sh
          ./zig-build/build_libsrtp.sh --target=${{ matrix.target }}

      - name: Package Artifacts
        run: |
          target_dir="release/${{ matrix.target }}"
          mkdir -p $target_dir

          # 打包openssl
          openssl_src="zig-build/install/openssl/${{ matrix.target }}"
          if [ -d "$openssl_src" ]; then
            openssl_tar="openssl-3.0.16-${{ matrix.target }}-${{ env.LAST_COMMIT_DATE }}.tar.gz"
            tar -czvf "$target_dir/$openssl_tar" -C "$openssl_src" .
          fi

          # 打包libsrtp
          libsrtp_src="zig-build/install/libsrtp/${{ matrix.target }}"
          if [ -d "$libsrtp_src" ]; then
            libsrtp_tar="libsrtp-2.4.2-${{ matrix.target }}-${{ env.LAST_COMMIT_DATE }}.tar.gz"
            tar -czvf "$target_dir/$libsrtp_tar" -C "$libsrtp_src" .
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deps-${{ matrix.target }}-${{ env.LAST_COMMIT_DATE }}
          path: |
            release/${{ matrix.target }}/*.tar.gz
          retention-days: 3

  release:
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: combined-artifacts
          pattern: deps-*-${{ needs.build.outputs.last_commit_date }}
          merge-multiple: true

      - name: Create Unified Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: deps-${{ env.LAST_COMMIT_DATE }}
          name: "Dependencies Release (${{ env.LAST_COMMIT_DATE }})"
          body: |
            ## Cross-platform Build Results
            ​**Components:**
            - OpenSSL 3.0.16
            - libsrtp 2.4.2

            ​**Build Date:** ${{ env.BUILD_DATE }}
            ​**Source Commit:** [${{ github.sha }}](/${{ github.repository }}/commit/${{ github.sha }})
            
            ​**Supported Targets:**
            ${{ join(matrix.targets, '\n') }}
          draft: false
          prerelease: false
          overwrite: true
          files: |
            combined-artifacts/**/*.tar.gz